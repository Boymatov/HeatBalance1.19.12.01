<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="btn_DiagrammaText" xml:space="preserve">
    <value>Diagramme</value>
  </data>
  <data name="btn_ExitText" xml:space="preserve">
    <value>Exit</value>
  </data>
  <data name="btn_RaschetText" xml:space="preserve">
    <value>Solve</value>
  </data>
  <data name="btn_reportText" xml:space="preserve">
    <value>Report</value>
  </data>
  <data name="btn_reportOptionText" xml:space="preserve">
    <value>Report option...</value>
  </data>
  <data name="label1Text" xml:space="preserve">
    <value>Variance</value>
  </data>
  <data name="label48Text" xml:space="preserve">
    <value>Warmth expenditure on warming up of dried materials and evaporation of moisture Q1, kw</value>
  </data>
  <data name="label51Text" xml:space="preserve">
    <value>Losses of warmth with waste gases Q2, kw</value>
  </data>
  <data name="label53Text" xml:space="preserve">
    <value>Losses of warmth with chemical недожогом Q3, kw</value>
  </data>
  <data name="label57Text" xml:space="preserve">
    <value>Losses of warmth by fire chamber Q5top, kw</value>
  </data>
  <data name="label59Text" xml:space="preserve">
    <value>Losses of warmth owing to heat conduction of walls of working space Q5т, kw</value>
  </data>
  <data name="label60Text" xml:space="preserve">
    <value>Heat balance</value>
  </data>
  <data name="label61Text" xml:space="preserve">
    <value>Oven heat rate</value>
  </data>
  <data name="label62Text" xml:space="preserve">
    <value>kw</value>
  </data>
  <data name="label63Text" xml:space="preserve">
    <value>kDg/kg</value>
  </data>
  <data name="label64Text" xml:space="preserve">
    <value>Warmth expenditure on 1 kg of the evaporated moisture</value>
  </data>
  <data name="label67Text" xml:space="preserve">
    <value>kg/ch</value>
  </data>
  <data name="label68Text" xml:space="preserve">
    <value>Black oil expenditure</value>
  </data>
  <data name="label69Text" xml:space="preserve">
    <value>kg/c</value>
  </data>
  <data name="tabPage2Text" xml:space="preserve">
    <value>Initial data</value>
  </data>
  <data name="tabPage3Text" xml:space="preserve">
    <value>Total calculation</value>
  </data>
  <data name="strMessage" xml:space="preserve">
    <value>Established English localization of the user interface!</value>
  </data>
  <data name="strMessage2" xml:space="preserve">
    <value>Message</value>
  </data>
  <data name="Form1Text" xml:space="preserve">
    <value>Calculation of a heat balance of the drier drum</value>
  </data>
  <data name="btnAboutProgramText" xml:space="preserve">
    <value>About programm...</value>
  </data>
  <data name="case0" xml:space="preserve">
    <value>Language has been changed. Please, continue work</value>
  </data>
  <data name="case1" xml:space="preserve">
    <value>Data has been corrected. It is necessary to execute calculation</value>
  </data>
  <data name="case2" xml:space="preserve">
    <value>Calculation is completed successfully</value>
  </data>
  <data name="case3" xml:space="preserve">
    <value>There is a calculation performance...</value>
  </data>
  <data name="case4" xml:space="preserve">
    <value>Calculation is not executed</value>
  </data>
  <data name="case5" xml:space="preserve">
    <value>Execute calculation</value>
  </data>
  <data name="strMessage5" xml:space="preserve">
    <value>Message</value>
  </data>
  <data name="strMessageOK" xml:space="preserve">
    <value>Calculation is completed successfully!</value>
  </data>
</root>